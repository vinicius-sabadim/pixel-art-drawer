{"version":3,"sources":["components/Info.js","components/Tools.js","utils.js","components/Drawer.js","App.js","index.js","assets/brush.png","assets/eraser.png","assets/pencil.png"],"names":["Info","_ref","boxSize","canvasHeight","canvasWidth","onChangeInput","react_default","a","createElement","className","min","name","step","type","value","onChange","Tools","mode","onChangeMode","concat","title","onClick","bind","this","src","Pencil","alt","Brush","Eraser","colors","isMouseClicked","event","buttons","rgbToHex","r","g","b","Error","toString","Drawer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","activeColor","ctx","componentDidMount","document","getElementById","getContext","setState","startGrid","_this$state","totalBoxHorizontal","parseInt","totalBoxVertical","initX","initY","draw","handleClick","e","_this$state2","_e$nativeEvent","nativeEvent","offsetX","offsetY","paint","getColorOfBox","handleMove","_e$nativeEvent2","colorToPaintOver","colorOfBox","colorToPaint","getColor","_this$state3","_ctx$getImageData$dat","slicedToArray","getImageData","data","handleChangeColor","color","hex","handleChangeMode","handleChangeInput","_event$target","target","defineProperty","_this$state4","fillStyle","strokeStyle","fillRect","strokeRect","_this$state5","inherits","createClass","key","_this$state6","id","height","width","style","onMouseMove","Info_Info","lib","disableAlpha","margin","Tools_Tools","Component","App","src_components_Drawer","ReactDOM","render","src_App_0","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.04cde4e6.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Info.css'\n\nexport default function Info({\n  boxSize,\n  canvasHeight,\n  canvasWidth,\n  onChangeInput\n}) {\n  return (\n    <div className=\"info\">\n      <div className=\"input\">\n        <label>Pixel</label>\n        <input\n          min=\"10\"\n          name=\"boxSize\"\n          step=\"5\"\n          type=\"number\"\n          value={boxSize}\n          onChange={onChangeInput}\n        />\n      </div>\n      <div className=\"input\">\n        <label>Width</label>\n        <input\n          min={boxSize}\n          name=\"canvasWidth\"\n          step={boxSize}\n          type=\"number\"\n          value={canvasWidth}\n          onChange={onChangeInput}\n        />\n      </div>\n      <div className=\"input\">\n        <label>Height</label>\n        <input\n          min={boxSize}\n          name=\"canvasHeight\"\n          step={boxSize}\n          type=\"number\"\n          value={canvasHeight}\n          onChange={onChangeInput}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Brush from '../assets/brush.png'\nimport Eraser from '../assets/eraser.png'\nimport Pencil from '../assets/pencil.png'\n\nimport './Tools.css'\n\nexport default function Tools({ mode, onChangeMode }) {\n  return (\n    <div className=\"tools\">\n      <div\n        className={`icon ${mode === 'draw' ? 'icon--active' : ''}`}\n        title=\"Draw\"\n        onClick={onChangeMode.bind(this, 'draw')}\n      >\n        <img src={Pencil} alt=\"Pencil by Denis Sazhin from the Noun Project\" />\n      </div>\n      <div\n        className={`icon ${mode === 'paint' ? 'icon--active' : ''}`}\n        title=\"Paint\"\n        onClick={onChangeMode.bind(this, 'paint')}\n      >\n        <img src={Brush} alt=\"Brush by Denis Sazhin from the Noun Project\" />\n      </div>\n      <div\n        className={`icon ${mode === 'eraser' ? 'icon--active' : ''}`}\n        title=\"Eraser\"\n        onClick={onChangeMode.bind(this, 'eraser')}\n      >\n        <img src={Eraser} alt=\"eraser by Maria Zamchy from the Noun Project\" />\n      </div>\n    </div>\n  )\n}\n","export const colors = [\n  '#f44336',\n  '#e91e63',\n  '#FF00EB',\n  '#9c27b0',\n  '#673ab7',\n  '#3f51b5',\n  '#2196f3',\n  '#03a9f4',\n  '#00bcd4',\n  '#009688',\n  '#4caf50',\n  '#8bc34a',\n  '#cddc39',\n  '#ffeb3b',\n  '#ffc107',\n  '#ff9800',\n  '#ff5722',\n  '#795548',\n  '#607d8b',\n  '#000000'\n]\n\nexport const isMouseClicked = event => {\n  return event.buttons === 1\n}\n\nexport const rgbToHex = (r, g, b) => {\n  if (r > 255 || g > 255 || b > 255) throw new Error('Invalid color component')\n  return ((r << 16) | (g << 8) | b).toString(16)\n}\n","import React, { Component } from 'react'\nimport { ChromePicker, CirclePicker } from 'react-color'\n\nimport Info from './Info'\nimport Tools from './Tools'\n\nimport { colors, isMouseClicked, rgbToHex } from '../utils'\n\nimport './Drawer.css'\n\nexport class Drawer extends Component {\n  state = {\n    activeColor: '#f44336',\n    boxSize: 25,\n    canvasHeight: 700,\n    canvasWidth: 700,\n    ctx: null,\n    mode: 'draw'\n  }\n\n  componentDidMount = () => {\n    const ctx = document.getElementById('canvas').getContext('2d')\n    this.setState({ ctx }, this.startGrid)\n  }\n\n  startGrid = () => {\n    const { boxSize, canvasHeight, canvasWidth } = this.state\n    const totalBoxHorizontal = parseInt(canvasWidth / boxSize, 10)\n    const totalBoxVertical = parseInt(canvasHeight / boxSize, 10)\n\n    for (let initX = 0; initX < totalBoxHorizontal; initX++) {\n      for (let initY = 0; initY < totalBoxVertical; initY++) {\n        this.draw(initX, initY, '#fff')\n      }\n    }\n  }\n\n  handleClick = e => {\n    const { activeColor, boxSize, mode } = this.state\n    const { offsetX, offsetY } = e.nativeEvent\n    const initX = parseInt(offsetX / boxSize, 10)\n    const initY = parseInt(offsetY / boxSize, 10)\n\n    if (mode === 'paint') {\n      this.paint(initX, initY, this.getColorOfBox(initX, initY))\n    } else {\n      this.draw(initX, initY, activeColor)\n    }\n  }\n\n  handleMove = e => {\n    if (this.state.mode === 'paint') return\n\n    const { boxSize } = this.state\n    const { offsetX, offsetY } = e.nativeEvent\n\n    if (isMouseClicked(e)) {\n      const initX = parseInt(offsetX / boxSize, 10)\n      const initY = parseInt(offsetY / boxSize, 10)\n      this.draw(initX, initY)\n    }\n  }\n\n  paint = (initX, initY, colorToPaintOver) => {\n    const colorOfBox = this.getColorOfBox(initX, initY)\n    const colorToPaint = this.getColor()\n\n    if (colorOfBox === colorToPaintOver) {\n      this.draw(initX, initY, colorToPaint)\n    }\n\n    if (this.getColorOfBox(initX - 1, initY) === colorToPaintOver) {\n      this.paint(initX - 1, initY, colorToPaintOver)\n    }\n    if (this.getColorOfBox(initX + 1, initY) === colorToPaintOver) {\n      this.paint(initX + 1, initY, colorToPaintOver)\n    }\n    if (this.getColorOfBox(initX, initY - 1) === colorToPaintOver) {\n      this.paint(initX, initY - 1, colorToPaintOver)\n    }\n    if (this.getColorOfBox(initX, initY + 1) === colorToPaintOver) {\n      this.paint(initX, initY + 1, colorToPaintOver)\n    }\n  }\n\n  getColorOfBox = (initX, initY) => {\n    const { boxSize, ctx } = this.state\n    const [r, g, b] = ctx.getImageData(\n      initX * boxSize + 1,\n      initY * boxSize + 1,\n      1,\n      1\n    ).data\n    return rgbToHex(r, g, b)\n  }\n\n  handleChangeColor = color => {\n    this.setState({ activeColor: color.hex })\n  }\n\n  handleChangeMode = mode => {\n    this.setState({ mode })\n  }\n\n  handleChangeInput = event => {\n    const { name, value } = event.target\n    if (!value) return\n\n    this.setState({ [name]: parseInt(value, 10) }, this.startGrid)\n  }\n\n  draw = (initX, initY, color) => {\n    const { boxSize, ctx } = this.state\n    ctx.fillStyle = color ? color : this.getColor()\n    ctx.strokeStyle = '#ccc'\n    ctx.fillRect(initX * boxSize, initY * boxSize, boxSize, boxSize)\n    ctx.strokeRect(initX * boxSize, initY * boxSize, boxSize, boxSize)\n  }\n\n  getColor = () => {\n    const { activeColor, mode } = this.state\n    if (mode === 'eraser') return '#fff'\n    return activeColor\n  }\n\n  render() {\n    const { activeColor, canvasHeight, canvasWidth } = this.state\n\n    return (\n      <div className=\"container\">\n        <canvas\n          id=\"canvas\"\n          height={canvasHeight}\n          width={canvasWidth}\n          style={{ height: canvasHeight, width: canvasWidth }}\n          onClick={this.handleClick}\n          onMouseMove={this.handleMove}\n        />\n        <div className=\"panel\">\n          <Info\n            boxSize={this.state.boxSize}\n            canvasHeight={canvasHeight}\n            canvasWidth={canvasWidth}\n            onChangeInput={this.handleChangeInput}\n          />\n          <ChromePicker\n            color={activeColor}\n            disableAlpha={true}\n            onChange={this.handleChangeColor}\n          />\n          <div style={{ margin: '30px 0' }}>\n            <CirclePicker\n              color={activeColor}\n              colors={colors}\n              width=\"210px\"\n              onChange={this.handleChangeColor}\n            />\n          </div>\n          <Tools mode={this.state.mode} onChangeMode={this.handleChangeMode} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Drawer\n","import React, { Component } from 'react'\n\nimport Drawer from './components/Drawer'\n\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Pixel Art Drawer</h1>\n        <Drawer />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/brush.fe184838.png\";","module.exports = __webpack_public_path__ + \"static/media/eraser.1bcd3a4b.png\";","module.exports = __webpack_public_path__ + \"static/media/pencil.f4e77384.png\";"],"sourceRoot":""}